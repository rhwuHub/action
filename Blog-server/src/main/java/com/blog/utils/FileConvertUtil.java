package com.blog.utils;import com.artofsolving.jodconverter.DefaultDocumentFormatRegistry;import com.artofsolving.jodconverter.DocumentConverter;import com.artofsolving.jodconverter.DocumentFormat;import com.artofsolving.jodconverter.openoffice.connection.OpenOfficeConnection;import com.artofsolving.jodconverter.openoffice.connection.SocketOpenOfficeConnection;import com.artofsolving.jodconverter.openoffice.converter.OpenOfficeDocumentConverter;import com.artofsolving.jodconverter.openoffice.converter.StreamOpenOfficeDocumentConverter;import java.io.*;import java.net.ConnectException;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLConnection;import java.nio.file.Files;import java.text.SimpleDateFormat;import java.util.Date;/** * 文件格式转换工具类 */public class FileConvertUtil {    /**     * 默认转换后文件后缀     */    private static final String DEFAULT_SUFFIX = "pdf";    /**     * openoffice的host:你部署openoffice的服务器ip     */    private static final String OPENOFFICE_HOST = "139.9.220.169";    /**     * openoffice的port     */    private static final Integer OPENOFFICE_PORT = 8100;    /**     * 方法描述 office文档转换为PDF(处理本地文件)     * @param sourcePath 源文件路径     * @param suffix     源文件后缀     * @return InputStream 转换后文件输入流     */    public static InputStream convertLocaleFile(String sourcePath, String suffix) throws Exception {        File inputFile = new File(sourcePath);        InputStream inputStream = new FileInputStream(inputFile);        return covertCommonByStream(inputStream, suffix);    }    /**     * office文档转换为PDF文件流(处理网络文件)     *     * @param netFileUrl 网络文件路径     * @param suffix     文件后缀     * @return InputStream 转换后文件输入流     */    public static InputStream convertNetFile(String netFileUrl, String suffix) throws Exception {        // 创建URL        URL url = new URL(netFileUrl);        // 试图连接并取得返回状态码        URLConnection urlconn = url.openConnection();        urlconn.connect();        HttpURLConnection httpconn = (HttpURLConnection) urlconn;        int httpResult = httpconn.getResponseCode();        if (httpResult == HttpURLConnection.HTTP_OK) {            InputStream inputStream = urlconn.getInputStream();            return covertCommonByStream(inputStream, suffix);        }        return null;    }    /**     * office文档转换为PDF文件(处理网络文件)     *     * @param netFileUrl 网络文件路径     * @param suffix     文件后缀     * @param targetPath      目标文件全路径 eg: C:\Users\cvec2022\Desktop\abc.pdf     * @return InputStream 转换后文件输入流     */    public static File convertNetFileToFile(String netFileUrl, String suffix, String targetPath) throws Exception {        // 创建URL        URL url = new URL(netFileUrl);        // 试图连接并取得返回状态码        URLConnection urlconn = url.openConnection();        urlconn.connect();        HttpURLConnection httpconn = (HttpURLConnection) urlconn;        int httpResult = httpconn.getResponseCode();        if (httpResult == HttpURLConnection.HTTP_OK) {            InputStream inputStream = urlconn.getInputStream();            return covertCommonByStream(inputStream, suffix, targetPath);        }        return null;    }    /**     * 将文件以流的形式转换     *     * @param inputStream 源文件输入流     * @param suffix      源文件后缀     * @return InputStream 转换后文件输入流     */    public static InputStream covertCommonByStream(InputStream inputStream, String suffix) throws Exception {        ByteArrayOutputStream out = new ByteArrayOutputStream();        OpenOfficeConnection connection = new SocketOpenOfficeConnection(OPENOFFICE_HOST, OPENOFFICE_PORT);        connection.connect();        DocumentConverter converter = new StreamOpenOfficeDocumentConverter(connection);        DefaultDocumentFormatRegistry formatReg = new DefaultDocumentFormatRegistry();        DocumentFormat targetFormat = formatReg.getFormatByFileExtension(DEFAULT_SUFFIX);        DocumentFormat sourceFormat = formatReg.getFormatByFileExtension(suffix);        converter.convert(inputStream, sourceFormat, out, targetFormat);        connection.disconnect();        return outputStreamConvertInputStream(out);    }    /**     * 将文件以文件的形式转换     *     * @param inputStream 源文件输入流     * @param suffix      源文件后缀     * @param targetPath      目标文件全路径 eg: C:\Users\cvec2022\Desktop\abc.pdf     * @return File 转换后文件     */    public static File covertCommonByStream(InputStream inputStream, String suffix, String targetPath) throws Exception {        ByteArrayOutputStream out = new ByteArrayOutputStream();        OpenOfficeConnection connection = new SocketOpenOfficeConnection(OPENOFFICE_HOST, OPENOFFICE_PORT);        try{            connection.connect();            DocumentConverter converter = new StreamOpenOfficeDocumentConverter(connection);            DefaultDocumentFormatRegistry formatReg = new DefaultDocumentFormatRegistry();            DocumentFormat targetFormat = formatReg.getFormatByFileExtension(DEFAULT_SUFFIX);            DocumentFormat sourceFormat = formatReg.getFormatByFileExtension(suffix);            converter.convert(inputStream, sourceFormat, out, targetFormat);        }finally {            connection.disconnect();        }        ByteArrayOutputStream baos = (ByteArrayOutputStream) out;        return byteArrayToFile(baos.toByteArray(), targetPath);    }    /**     * byte数组转File     * @param byteArray 字节数组     * @param targetPath 目标路径     */    public static File byteArrayToFile(byte[] byteArray, String targetPath) {        InputStream in = new ByteArrayInputStream(byteArray);        File file = new File(targetPath);        String path = targetPath.substring(0, targetPath.lastIndexOf(File.separator));        if (!file.exists()) {            new File(path).mkdir();        }        FileOutputStream fos = null;        try {            fos = new FileOutputStream(file);            int len = 0;            byte[] buf = new byte[1024];            while ((len = in.read(buf)) != -1) {                fos.write(buf, 0, len);            }            fos.flush();        } catch (Exception e) {            e.printStackTrace();        } finally {            if (null != fos) {                try {                    fos.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        return file;    }    /**     *  inputStream转File     */    public static void inputStreamToFile(InputStream ins, File file) throws IOException {        OutputStream os = Files.newOutputStream(file.toPath());        int bytesRead = 0;        byte[] buffer = new byte[8192];        while ((bytesRead = ins.read(buffer, 0, 8192)) != -1) {            os.write(buffer, 0, bytesRead);        }        os.close();        ins.close();    }    /**     *  outputStream转inputStream     */    public static ByteArrayInputStream outputStreamConvertInputStream(final OutputStream out) throws Exception {        ByteArrayOutputStream baos = (ByteArrayOutputStream) out;        return new ByteArrayInputStream(baos.toByteArray());    }    /**     * 转换文件成html     *     * @param fromFileInputStream:     * @throws IOException     */    public String file2Html(InputStream fromFileInputStream, String toFilePath,String type) throws IOException {        Date date = new Date();        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");        String timesuffix = sdf.format(date);        String docFileName = null;        String htmFileName = null;        if("doc".equals(type)){            docFileName = "doc_" + timesuffix + ".doc";            htmFileName = "doc_" + timesuffix + ".html";        }else if("docx".equals(type)){            docFileName = "docx_" + timesuffix + ".docx";            htmFileName = "docx_" + timesuffix + ".html";        }else if("xls".equals(type)){            docFileName = "xls_" + timesuffix + ".xls";            htmFileName = "xls_" + timesuffix + ".html";        }else if("ppt".equals(type)){            docFileName = "ppt_" + timesuffix + ".ppt";            htmFileName = "ppt_" + timesuffix + ".html";        }else{            return null;        }        File htmlOutputFile = new File(toFilePath + File.separatorChar + htmFileName);        File docInputFile = new File(toFilePath + File.separatorChar + docFileName);        if (htmlOutputFile.exists())            htmlOutputFile.delete();        htmlOutputFile.createNewFile();        if (docInputFile.exists())            docInputFile.delete();        docInputFile.createNewFile();        /**         * 由fromFileInputStream构建输入文件         */        try {            OutputStream os = new FileOutputStream(docInputFile);            int bytesRead = 0;            byte[] buffer = new byte[1024 * 8];            while ((bytesRead = fromFileInputStream.read(buffer)) != -1) {                os.write(buffer, 0, bytesRead);            }            os.close();            fromFileInputStream.close();        } catch (IOException e) {        }        OpenOfficeConnection connection = new SocketOpenOfficeConnection(OPENOFFICE_HOST, OPENOFFICE_PORT);        try {            connection.connect();        } catch (ConnectException e) {            System.err.println("文件转换出错，请检查OpenOffice服务是否启动。");        }        // convert        DocumentConverter converter = new OpenOfficeDocumentConverter(connection);        converter.convert(docInputFile, htmlOutputFile);        connection.disconnect();        // 转换完之后删除word文件        docInputFile.delete();        return htmFileName;    }    // public static void main(String[] args) throws Exception {    // 	convertNetFileToFile("http://139.9.220.169:9090/upload/4bd6e27a-5ab3-4961-8891-9079aff817c6.docx", "docx", "C:\\Users\\cvec2022\\Desktop\\abc.pdf");    // }//     public static void main(String[] args) throws IOException {//         Doc2HtmlUtil coc2HtmlUtil = getDoc2HtmlUtilInstance();//         File file = null;//         FileInputStream fileInputStream = null;////         file = new File("D:/poi-test/exportExcel.xls");//         fileInputStream = new FileInputStream(file);// //		coc2HtmlUtil.file2Html(fileInputStream, "D:/poi-test/openOffice/xls","xls");////     }}